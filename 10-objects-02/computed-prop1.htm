<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Computed Properties | 01</title>
</head>
<body>
<script>

// 01. Computed Property Names: 
// The ES6 computed property names feature allows developers 
// to compute an expression as a property name on an object.
/*
Syntax:
const propName = "dynamicPropName";
const obj = {
    [propName] : value
};
*/

let LAST_NAME = "lastName";
let full = {
    firstName : "Gad",
    [LAST_NAME]: "Iradufasha"
};

document.write("<br>");
document.write(full.firstName+" "+full.lastName); // Gad Iradufasha
document.write("<br>");
document.write(full.firstName+" "+full.LAST_NAME); // Gad undefined
document.write("<hr>");

// b) one, two, three
let theProp = 'three';
let rankObject = {
    one : 1,
    two : 2,
    [theProp] : 3, // three : 3
}
// When you access c property of the rank object, JS 
// evaluates theProp and returns the property's value.
document.write(rankObject.three); // 3
document.write("<br>");


// c. Like an object literal, The computed properties can also 
// be used for getters and setters of a class.
let name = 'fullName';
class Person {
    constructor(firstName, lastName) {
        this.firstName = firstName;
        this.lastName  = lastName;
    }
    get [name]() { // Same as fullName() {...
        return this.firstName+" "+this.lastName;
    }
}

let person1 = new Person("Mack", "Gad");
document.write(person1.fullName); // Mack Gad
document.write("<br>");


// 02. Use of Dynamic Property Names:
// Here, I will dynamically create an object and add a property 
// name and assign a value to that specific property in order to 
// create a customized key-value pair.  
let LAST_NAME2 = "lastName2";
let fullName2 = {
    firstName2 : "Danny",
};

fullName2[LAST_NAME2] = "Trejo";
document.write(`${fullName2.firstName2} ${fullName2.lastName2}`); 
// Danny Trejo
document.write("<br>");


// 03. Using Conditional Expression as a prop. name.
const age = 9;
const theKey1 = "ageIsMoreThanFive";
const theKey2 = "ageIsMoreThanNine";

const obj1 = {
    name : "Gadrone", 
    [age > 9 ? theKey2 : theKey1] : true 
}; 
document.write("<hr>");
document.write(obj1, "<br>"); // [object Object]
document.write(obj1.ageIsMoreThanNine+"<br>"); // undefined
document.write(obj1.ageIsMoreThanFive+"<br>"); // true
document.write(obj1.name); // true
document.write("<hr>");

</script>
</body>
</html>