<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Define a Function!</title>
</head>
<body>
<script>

/*
Itâ€™s a good practice to minimize the use of global variables. 
Modern code has few or no globals. Most variables reside in 
their functions. Sometimes though, they can be useful to 
store project-level data.
*/

// 1. Defining a simple function;
function printDevName() {
    // Local variable
    let devName = "Gad Iradufasha";
    document.write(`Hello I am ${devName}`);
}
printDevName();
// I can't print devName variable, as it is local to the function!

// 2. Dealing with and accessing the Outer variables
let friendName = "Abijuru";
function showFriendName() {
    let message = `Good morning, ${friendName}`;
    document.write(`<hr>${message}`);
    // The fx has full access to the outer variable and 
    // It can modify it as well.
    friendName = "Benjamin";
    document.write(`<br>${friendName}<hr>`);
}

showFriendName();
document.write(`${friendName}<hr>`); // Not Abij..., It's Benjamin.

// Using Parameterized function
function greetFriend(t, friendName) {
    let greetType = '';
    if(t=='Morning' || t=='morning' || t=='Good morning') {
        greetType = `Good morning ${friendName}`;
    } else if(t=='Afternoon' || t=='afternoon' || t=='Good afternoon') {
        greetType = `Good afternoon ${friendName}`;
    } else if(t=='Evening' || t=='evening' || t=='Good evening') {
        greetType = `Good evening ${friendName}`;
    } else {
        greetType = `Hello ${friendName}`;
    }
    document.write(greetType, "<br>");
}

// Calling function
greetFriend('morning', 'Augustine');
greetFriend('Afternoon', 'Nathan');

//


</script>
</body>
</html>