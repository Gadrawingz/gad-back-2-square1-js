<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Function expression 1</title>
</head>
<body>
<script>

// Function expression
// 1. This fx will display the developer name:
let showDeveloperName = function() {
    const name = "Gad Iradufasha";
    document.write("Hello "+name);
};

document.write(showDeveloperName) // prints the func code.
document.write("<hr>");
showDeveloperName(); // Here we call the shit!
document.write("<br>");
// NB: A FX Expression is created when the execution reaches it 
// and is usable only from that moment.
/*
Once the execution flow passes to the right side of the assignment
sum = functionâ€¦ is created and can be used (assigned, called, etc. ) from now on.
*/

// callSomeone("Pete") error: this will not work
let callSomeone = function(username) {
    document.write(`What's up ${username}!<br>`);
};
callSomeone("Pete")



// The diff is that: A FX Declaration can be called earlier than 
// it is defined. For example, a global Function Declaration is 
// visible in the whole script, no matter where it is.
callSomeone2("Gad")
function callSomeone2(username) {
    document.write(`What's up ${username}!<br>`);
}

</script>   
</body>
</html>

